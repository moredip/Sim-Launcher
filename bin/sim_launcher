#!/usr/bin/env ruby

require 'rubygems'
require 'sinatra'

require 'sim_launcher'

# SimLauncher starts on port 8881 by default. To specify a custom port just pass it as the first command line argument.
set :port, (ARGV[0] || 8881)

# otherwise sinatra won't always automagically launch its embedded
# http server when this script is executed
set :run, true

  
shared_simulator = SimLauncher::Simulator.new

get '/' do
  <<EOS
  <h1>SimLauncher is up and running...</h1>
  <a href="/showsdks">Here's a list of sdks that SimLauncher has detected</a>
EOS
end

get '/showsdks' do
  '<pre>' +
  shared_simulator.showsdks +
  '</pre>'
end

get '/launch_ipad_app' do
  app_path = params[:app_path]
  app_name = params[:app_name]  
  
  sdk = params[:sdk]
  restart_requested = ("true" == params[:restart])
  
  shared_simulator.quit_simulator if restart_requested

  if (!app_name.nil? && !app_name.empty?)
    shared_simulator.launch_ipad_app_with_name( app_name, sdk )
  else
    raise 'no app_path provided' if app_path.nil?
    shared_simulator.launch_ipad_app( app_path, sdk )
  end

end

get '/launch_iphone_app' do
  app_path = params[:app_path]
  app_name = params[:app_name]

  sdk = params[:sdk]
  restart_requested = ("true" == params[:restart])

  shared_simulator.quit_simulator if restart_requested

  if (!app_name.nil? && !app_name.empty?)
    shared_simulator.launch_iphone_app_with_name( app_name, sdk )
  else
    raise 'no app_path provided' if app_path.nil?
    shared_simulator.launch_iphone_app( app_path, sdk )
  end
end
